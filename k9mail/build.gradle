def pEpEngineRevision = 1510
def pEpJNIAdapterRevision = 280
def version = "0.9.9.2"


buildscript {
    repositories {
        mavenCentral()
    }
}

apply plugin: 'com.android.application'

if (!rootProject.optimizeForDevelopment) {
    apply from: '../gradle/plugins/checkstyle-android.gradle'
    apply from: '../gradle/plugins/findbugs-android.gradle'
}

if (rootProject.testCoverage) {
    apply plugin: 'jacoco'
}

repositories {
    jcenter()
}

ext {
    supportLibraryVersion = '24.2.1'
}

//noinspection GroovyAssignabilityCheck
configurations.all {
    resolutionStrategy {
        force "com.android.support:support-annotations:${androidSupportLibraryVersion}"
    }
}

dependencies {
    compile project(':pEpJNIAdapter')
    compile project(':k9mail-library')
    compile project(':plugins:Android-PullToRefresh:library')
    compile project(':plugins:HoloColorPicker')
    compile project(':plugins:openpgp-api-lib:openpgp-api')
    compile "com.squareup.okio:okio:${okioVersion}"
    compile 'commons-io:commons-io:2.4'
    compile "com.android.support:support-v4:${androidSupportLibraryVersion}"
    compile 'net.sourceforge.htmlcleaner:htmlcleaner:2.16'
    compile 'com.github.bumptech.glide:glide:3.6.1'
    compile 'com.splitwise:tokenautocomplete:2.0.7'
    compile 'de.cketti.safecontentresolver:safe-content-resolver-v14:0.9.0'
    compile 'com.github.amlcurran.showcaseview:library:5.4.1'

    androidTestCompile 'com.android.support.test.espresso:espresso-core:2.2.1'

    testCompile "org.robolectric:robolectric:${robolectricVersion}"
    testCompile "junit:junit:${junitVersion}"
    testCompile "org.mockito:mockito-core:${mockitoVersion}"

    compile 'com.jakewharton:butterknife:7.0.1'
    compile 'uk.co.chrisjenx:calligraphy:2.1.0'
    compile 'de.hdodenhof:circleimageview:2.1.0'
    compile 'com.github.pedrovgs:renderers:3.2.0'
    compile 'ch.acra:acra:4.6.1'
    compile "com.android.support:support-v4:${project.supportLibraryVersion}"
    compile "com.android.support:support-vector-drawable:${project.supportLibraryVersion}"
    compile 'com.github.paolorotolo:appintro:4.1.0'
    compile 'org.jsoup:jsoup:1.10.1'

    compile "com.android.support:recyclerview-v7:${project.supportLibraryVersion}"
    compile "com.android.support:cardview-v7:${project.supportLibraryVersion}"

    compile 'com.jakewharton:butterknife:7.0.1'
    compile 'uk.co.chrisjenx:calligraphy:2.1.0'
    compile 'ch.acra:acra:4.6.1'

    // Arch dependencies
    provided 'org.glassfish:javax.annotation:10.0-b28'
    annotationProcessor "com.google.dagger:dagger-compiler:2.4"
    compile 'com.google.dagger:dagger:2.4'
}

android {
    compileSdkVersion androidCompileSdkVersion.toInteger()
    buildToolsVersion androidBuildToolsVersion

    defaultConfig {
        //Original config
//        applicationId "com.fsck.k9"
//        testApplicationId "com.fsck.k9.tests"

//        versionCode 23191
//        versionName '5.200-RC2'

        applicationId "pep.android.k9"
        versionCode 43
//        versionName '0.9.9.2'
        minSdkVersion 18
        targetSdkVersion 22

        generatedDensities = ['mdpi', 'hdpi', 'xhdpi']

        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"

        jackOptions {
            enabled true
        }

        buildConfigField "int", "ENGINE_REVISION", "${pEpEngineRevision}"
        buildConfigField "int", "ADAPTER_REVISION", "${pEpJNIAdapterRevision}"
    }
    flavorDimensions 'playStore', 'none'

    productFlavors {
        withkeysync {
            buildConfigField "boolean", "WITH_KEY_SYNC", "true"
            versionName "${version}" + '.withKeysync'
            dimension 'playStore'

        }
        withthoutkeysync {
            buildConfigField "boolean", "WITH_KEY_SYNC", "false"
            versionName "${version}" + '.withoutKeysync'
            dimension 'playStore'

        }
        playStore {
            dimension 'none'
        }
    }
    signingConfigs {
        release
    }
    buildTypes {
        release {
            if (project.hasProperty('storeFile')) {
                signingConfig signingConfigs.release
            }

            buildConfigField "boolean", "DEVELOPER_MODE", "false"
        }

        debug {
            // applicationIdSuffix ".debug"
            testCoverageEnabled rootProject.testCoverage

            buildConfigField "boolean", "DEVELOPER_MODE", "true"
        }
    }
    // Do not abort build if lint finds errors
    lintOptions {
        abortOnError false
        lintConfig file("$rootProject.projectDir/config/lint/lint.xml")
    }
    packagingOptions {
        exclude 'META-INF/DEPENDENCIES'
        exclude 'META-INF/LICENSE'
        exclude 'META-INF/LICENSE.txt'
        exclude 'META-INF/NOTICE.txt'
        exclude 'META-INF/NOTICE'
        exclude 'META-INF/LICENSE'
        exclude 'META-INF/DEPENDENCIES'
        exclude 'META-INF/notice.txt'
        exclude 'META-INF/license.txt'
        exclude 'META-INF/dependencies.txt'
        exclude 'META-INF/LGPL2.1'
        exclude 'META-INF/README'
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    productFlavors {
    }

    splits {
        abi {
            enable true
            reset()
            include 'armeabi'
            universalApk false
        }
    }
    buildToolsVersion '25.0.0'
}

if (project.hasProperty('keyAlias')) {
    android.signingConfigs.release.keyAlias = keyAlias
}
if (project.hasProperty('keyPassword')) {
    android.signingConfigs.release.keyPassword = keyPassword
}
if (project.hasProperty('storeFile')) {
    android.signingConfigs.release.storeFile = file(storeFile)
}
if (project.hasProperty('storePassword')) {
    android.signingConfigs.release.storePassword = storePassword
}
