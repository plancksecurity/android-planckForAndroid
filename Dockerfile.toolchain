FROM debian:bullseye

# dependencies 
RUN apt-get update && apt-get upgrade -yqq && ret_code=$? && echo $ret_code
# RUN apt-add-repository 'deb http://security.debian.org/debian-security stretch/updates main'
RUN apt-get install -yqq apt-utils git clang libclang-dev make pkg-config nettle-dev libssl-dev \
    capnproto libsqlite3-dev build-essential curl wget software-properties-common libtool patch \
    ant gettext unzip vim bash-completion autoconf automake cargo android-sdk* locales

RUN DEBIAN_FRONTEND="noninteractive" apt-get install -yqq python3 python3-lxml-dbg python3-lxml python3-distutils-extra
RUN DEBIAN_FRONTEND="noninteractive" apt-get install -yqq asn1c
RUN update-alternatives --install /usr/bin/python python /usr/bin/python3.9 1
RUN curl https://sh.rustup.rs -sSf | bash -s -- --default-toolchain 1.64.0 -y

# Install Java 11
RUN apt-get update -yqq && ret_code=$? && echo $ret_code && \
    apt-get install -yqq apt-transport-https ca-certificates wget dirmngr gnupg2 software-properties-common && ret_code=$? && echo $ret_code && \
    mkdir -p /etc/apt/keyrings && ret_code=$? && echo "checkpoint 1: $ret_code" && \
    wget -O - https://packages.adoptium.net/artifactory/api/gpg/key/public | tee /etc/apt/keyrings/adoptium.asc && ret_code=$? && echo "checkpoint 2: $ret_code" && \
    echo "deb [signed-by=/etc/apt/keyrings/adoptium.asc] https://packages.adoptium.net/artifactory/deb $(awk -F= '/^VERSION_CODENAME/{print$2}' /etc/os-release) main" | tee /etc/apt/sources.list.d/adoptium.list && ret_code=$? && echo $ret_code && \
    apt-get update -yqq && ret_code=$? && echo "checkpoint 3: $ret_code" && \
    apt-get install -yqq temurin-11-jdk && ret_code=$? && echo "checkpoint 4: $ret_code" && \
    rm -rf /var/lib/apt/lists/* \
    && ret_code=$? && echo "checkpoint 5: $ret_code"
RUN update-java-alternatives -s temurin-11-jdk-amd64

# setup locales
RUN DEBIAN_FRONTEND="noninteractive" apt-get update -yqq && \
    apt-get install -yqq locales-all && \
    rm -rf /var/lib/apt/lists/*
ENV LANG en_US.UTF-8
ENV LANGUAGE en_US.UTF-8
ENV LC_ALL en_US.UTF-8
RUN locale-gen en_US.UTF-8 && \
    dpkg-reconfigure --frontend=noninteractive locales

# paths and aliases
ENV ANDROID_HOME=/usr/lib/android-sdk
ENV ANDROID_NDK=$ANDROID_HOME/ndk/25.1.8937393
ENV PATH=$ANDROID_HOME/cmdline-tools/latest/bin:$PATH
ENV PATH=$ANDROID_NDK:$PATH
ENV PATH="/root/.cargo/bin:${PATH}"

# download android sdk
RUN mkdir -p $ANDROID_HOME/cmdline-tools/latest
RUN curl -sL --connect-timeout 30 --retry 5 --retry-delay 5 \
    https://dl.google.com/android/repository/commandlinetools-linux-8092744_latest.zip -o android-sdk.zip
RUN unzip android-sdk.zip -d .
RUN mv cmdline-tools/* $ANDROID_HOME/cmdline-tools/latest
RUN rm android-sdk.zip
RUN rm -r cmdline-tools

# sdkmanager init
COPY docker/packages.txt .
RUN yes | sdkmanager --licenses | grep "All SDK package licenses accepted"
RUN sdkmanager --package_file=packages.txt

# ADD RUST TARGETS
RUN rustup target add aarch64-linux-android armv7-linux-androideabi i686-linux-android x86_64-linux-android

RUN echo " \n\
    [target.armv7-linux-androideabi] \n\
    ar = \"${ANDROID_NDK}/toolchains/llvm/prebuilt/linux-x86_64/bin/llvm-ar\" \n\
    linker = \"${ANDROID_NDK}/toolchains/llvm/prebuilt/linux-x86_64/bin/armv7a-linux-androideabi21-clang\" \n\
\n\   
    [target.aarch64-linux-android] \n\
    ar = \"${ANDROID_NDK}/toolchains/llvm/prebuilt/linux-x86_64/bin/llvm-ar\" \n\
    linker = \"${ANDROID_NDK}/toolchains/llvm/prebuilt/linux-x86_64/bin/aarch64-linux-android21-clang\" \n\
\n\
    [target.i686-linux-android] \n\
    ar = \"${ANDROID_NDK}/toolchains/llvm/prebuilt/linux-x86_64/bin/llvm-ar\" \n\
    linker = \"${ANDROID_NDK}/toolchains/llvm/prebuilt/linux-x86_64/bin/i686-linux-android21-clang\"   \n\
\n\
    [target.x86_64-linux-android] \n\
    ar = \"${ANDROID_NDK}/toolchains/llvm/prebuilt/linux-x86_64/bin/llvm-ar\" \n\
    linker = \"${ANDROID_NDK}/toolchains/llvm/prebuilt/linux-x86_64/bin/x86_64-linux-android21-clang\" \n\
    " > $HOME/.cargo/config
