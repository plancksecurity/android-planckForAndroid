tasks.register('prepareCoreBuild') {
    doLast {
        copyLocalConfsIfNeeded()
    }
}

private void copyLocalConfsIfNeeded() {
    def localConfsFolder = new File(rootDir, "localConfFiles")
    localConfsFolder.listFiles(new FileFilter() {
        @Override
        boolean accept(File pathname) {
            return pathname.isDirectory()
        }
    }).each { folder ->
        def destFolder = new File(rootDir, "submodules/${folder.name}")
        def destConfFile = new File(destFolder, "local.conf")
        def confTextSb = new StringBuilder()
        if (folder.name == "planckJNIWrapper") {
            def prefix = new File(rootDir, "submodules/planckJNIWrapper/submodules/planckCoreV3/build-android").absolutePath
            confTextSb.append("PREFIX=${prefix}")
        }
        def confFiles = folder.listFiles(new FilenameFilter() {
            @Override
            boolean accept(File dir, String name) {
                return name.endsWith(".conf")
            }
        })
        if (confFiles.length > 0) {
            confTextSb.append(System.lineSeparator())
            confTextSb.append(
                    confFiles.collect { confFile ->
                        confFile.text
                    }.join(System.lineSeparator())
            )
        }
        if (!confTextSb.isBlank() && (!destConfFile.exists() || confTextSb.toString() != destConfFile.text)) {
            destConfFile.write(confTextSb.toString())
        }
    }
}

preBuild.dependsOn(prepareCoreBuild)