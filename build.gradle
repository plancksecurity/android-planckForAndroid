import org.jetbrains.kotlin.gradle.dsl.KotlinCompile

buildscript {
    ext {
        buildConfig = [
                'compileSdk'           : 33,
                'targetSdk'            : 31,
                'minSdk'               : 21,
        ]

        versions = [
                'kotlin'             : '1.6.0',

                'supportLibrary'     : '28.0.0',
                'preferencesFix'     : '1.1.0',
                'appCompat'          : '1.2.0',
                'androidXcore'       : '1.3.2',
                'legacySupport'      : '1.0.0',
                'cardView'           : '1.0.0',
                'material'           : '1.3.0',
                'recyclerview'       : '1.1.0',
                'vectordrawable'     : '1.1.0',
                'preference'         : '1.1.1',
                'constraintLayout'   : '2.0.4',
                'lifecycleExtensions': '2.2.0',
                'androidxLifecycle'  : '2.5.1',
                'lifecycleViewModel' : '2.5.1',
                'okio'               : '3.2.0',
                'okhttp'             : '4.10.0',
                'timber'             : '4.5.1',
                'koin'               : '0.9.1',
                'commonsIo'          : '2.4',

                'apacheCommons'      : '2.4',
                'jsoup'              : '1.13.1',
                'glide'              : '3.7.0',
                'tokenAutoComplete'  : '2.0.7',
                'safeContentResolver': '0.9.0',
                'showCaseView'       : '5.4.1',
                'moshi'              : '1.2.0',
                'butterKnife'        : '7.0.1',
                'circleImageView'    : '2.1.0',
                'renderers'          : '3.5.0',
                'acra'               : '4.6.1',
                'appIntro'           : '5.1.0',
                'swipeLayout'        : '1.2.0',
                'dexter'             : '6.0.1',
                'workRuntime'        : '2.7.1',
                'crypto'             : '1.1.0-alpha03',
                'jcipAnnotations'    : '1.0',
                'jdom'               : '2.0.6',
                'dagger'             : '2.41',
                'groupie'            : '2.1.0',
                'ankoCoroutines'     : '0.10.4',
                'kotlinCoroutines'   : '1.6.4',
                'kotlinSerialization': '1.0.0',
                'multidex'           : '2.0.1',
                'biweekly'           : '0.6.6',




                'androidXjunit'      : '1.1.3',
                'androidXcoreTest'   : '1.5.0',
                'junit'              : '4.12',
                'robolectric'        : '4.5.1',
                'ant'                : '1.10.13',
                'runner_rules'       : '1.4.0',
                'mockito'            : '3.9.0',
                'mockitoKotlin'      : '1.5.0',
                'mockk'              : '1.12.4',
                'truth'              : '1.1',
                'espresso'           : '3.4.0',
                'uiAutomator'        : '2.2.0',
                'cucumber'           : '4.8.3',
                'cucumber_pico'      : '4.8.1',
        ]

        abiCodes = [
                'armeabi-v7a': 1,
                'arm64-v8a'  : 2,
                'x86'        : 3,
                'x86_64'     : 4
        ]
        javaVersion = JavaVersion.VERSION_1_8
    }

    repositories {
        jcenter()
        maven { url 'https://maven.google.com' }
        google()
    }

    dependencies {
        classpath 'com.android.tools.build:gradle:4.2.2'
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:${versions.kotlin}"
        classpath "org.jetbrains.kotlin:kotlin-android-extensions:${versions.kotlin}"
        classpath "org.jetbrains.kotlin:kotlin-serialization:${versions.kotlin}"
    }
}

allprojects {
    repositories {
        google()
        jcenter()
        maven { url 'https://jitpack.io' }
    }
}

project.ext {
    testCoverage = project.hasProperty('testCoverage')
}

subprojects {
    repositories {
        jcenter()
        google()
    }
}

allprojects {
    //configurations.all {
    //    resolutionStrategy.dependencySubstitution {
    //        substitute module("androidx.core:core") using module("androidx.core:core:${versions.androidxCore}")
    //        substitute module("androidx.activity:activity") using module("androidx.activity:activity:${versions.androidxActivity}")
    //        substitute module("androidx.activity:activity-ktx") using module("androidx.activity:activity-ktx:${versions.androidxActivity}")
    //        substitute module("androidx.fragment:fragment") using module("androidx.fragment:fragment:${versions.androidxFragment}")
    //        substitute module("androidx.fragment:fragment-ktx") using module("androidx.fragment:fragment-ktx:${versions.androidxFragment}")
    //        substitute module("androidx.appcompat:appcompat") using module("androidx.appcompat:appcompat:${versions.androidxAppCompat}")
    //        substitute module("androidx.preference:preference") using module("androidx.preference:preference:${versions.androidxPreference}")
    //        substitute module("androidx.recyclerview:recyclerview") using module("androidx.recyclerview:recyclerview:${versions.androidxRecyclerView}")
    //        substitute module("androidx.constraintlayout:constraintlayout") using module("androidx.constraintlayout:constraintlayout:${versions.androidxConstraintLayout}")
    //        substitute module("androidx.drawerlayout:drawerlayout") using module("androidx.drawerlayout:drawerlayout:${versions.androidxDrawerLayout}")
    //        substitute module("androidx.lifecycle:lifecycle-livedata") using module("androidx.lifecycle:lifecycle-livedata:${versions.androidxLifecycle}")
    //        substitute module("androidx.transition:transition") using module("androidx.transition:transition:${versions.androidxTransition}")
    //        substitute module("org.jetbrains:annotations") using module("org.jetbrains:annotations:${versions.jetbrainsAnnotations}")
    //        substitute module("org.jetbrains.kotlin:kotlin-stdlib") using module("org.jetbrains.kotlin:kotlin-stdlib:${versions.kotlin}")
    //        substitute module("org.jetbrains.kotlin:kotlin-stdlib-jdk7") using module("org.jetbrains.kotlin:kotlin-stdlib-jdk7:${versions.kotlin}")
    //        substitute module("org.jetbrains.kotlin:kotlin-stdlib-jdk8") using module("org.jetbrains.kotlin:kotlin-stdlib-jdk8:${versions.kotlin}")
    //        substitute module("org.jetbrains.kotlinx:kotlinx-coroutines-android") using module("org.jetbrains.kotlinx:kotlinx-coroutines-android:${versions.kotlinCoroutines}")
    //    }
    //}

    plugins.withType(com.android.build.gradle.BasePlugin).configureEach {
        project.android {
            compileSdk buildConfig.compileSdk

            defaultConfig {
                minSdk buildConfig.minSdk
                targetSdk buildConfig.targetSdk

                vectorDrawables.useSupportLibrary = true
                testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
            }

            compileOptions {
                sourceCompatibility javaVersion
                targetCompatibility javaVersion
            }

            lintOptions {
                abortOnError false
                lintConfig file("$rootProject.projectDir/config/lint/lint.xml")
            }

            testOptions {
                unitTests {
                    includeAndroidResources = true
                }
            }
        }
    }

    plugins.withType(JavaPlugin).configureEach {
        project.java {
            sourceCompatibility = javaVersion
            targetCompatibility = javaVersion
        }
    }

    tasks.withType(Test) {
        testLogging {
            exceptionFormat "full"
            showCauses true
            showExceptions true
            showStackTraces true
        }
    }

    tasks.withType(KotlinCompile) {
        kotlinOptions {
            jvmTarget = javaVersion
        }
    }
}
